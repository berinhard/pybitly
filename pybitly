#!/usr/bin/env python

import sys
from bitly_api import API


def bitly_shorten(long_url):
    if not long_url:
        wrong_usage_warning('no parameter specified.')
    api = API()
    response = api.shorten(long_url[0])
    if 'error_message' in response:
        print response['error_message']
    else:
        print response['url']

def bitly_expand(short_urls):
    if not short_urls:
        wrong_usage_warning('no parameter specified.')
    api = API()
    response = api.expand(short_urls)
    if 'error_message' in response:
        print response['error_message']
    else:
        for url in response:
            print url['short_url'] + ' corresponds to ' + url['long_url']

def bitly_help():
    print '''usage: pybitly COMMAND ARGS

The pybitly commands are:
    shorten     For a long URL, shorten encodes a URL and returns a short one.
    expand      Given a bit.ly URL, expand decodes it and returns back the target URL.
    '''

def wrong_usage_warning(error_message = ''):
    print "pybitly: %s See 'pybitly --help'" % error_message
    sys.exit(1)

if len(sys.argv) < 2:
    wrong_usage_warning('no command specified.')
    sys.exit(1)

commands_dict = {
    'shorten':bitly_shorten,
    'expand':bitly_expand,
}
command = sys.argv[1]

if command in commands_dict:
    commands_dict[command](sys.argv[2:])
elif command == '--help':
    bitly_help()
else:
    wrong_usage_warning('%s is not a pybitly command.' % command)
