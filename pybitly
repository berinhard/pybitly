#!/usr/bin/env python
import sys
from bitly_api import API
import argparse

def bitly_shorten(long_url):
    api = API()
    response = api.shorten(long_url.strip())
    if 'error_message' in response:
        print response['error_message']
    else:
        print response['url']

def bitly_expand(short_url):
    api = API()
    response = api.expand(short_url)
    if 'error_message' in response:
        print response['error_message']
    else:
        print response['expand'][0]['short_url'] + ' corresponds to ' + response['expand'][0]['long_url']

def bitly_clicks(short_url):
    api = API()
    response = api.clicks(short_url)
    if 'error_message' in response:
        print response['error_message']
    else:
        print response['clicks'][0]['short_url'] + ' was clicked ' + str(response['clicks'][0]['global_clicks']) + ' times.'

def main(method, url):
    commands_dict = {
        'shorten': bitly_shorten,
        'expand': bitly_expand,
        'clicks': bitly_clicks,
    }

    try:
        commands_dict[method](url)
    except KeyError:
        print "pybitly: There is no method called %s" % method
        print "Please, see 'pybitly -h, --help'"
        sys.exit(1)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'method',
        action='store',
        help='Choose wath API operation you want to use [shorten, expand, clicks]'
    )
    parser.add_argument(
        'url',
        action='store',
        help='Your URL'
    )

    arguments = parser.parse_args()

    main(arguments.method, arguments.url)
